[
    {
        "buggy_code": "/* Write a function to display the Fibonacci sequence using recursion */\nfunction fibonacci(n) {\n  if (n <= 1) {\n    return n;\n  } else {\n    return fibonacci(n + 1) + fibonacci(n + 2);\n  }\n}",
        "correct_code": "/* Write a function to display the Fibonacci sequence using recursion */\nfunction fibonacci(n) {\n  if (n <= 1) {\n    return n;\n  } else {\n    return fibonacci(n - 1) + fibonacci(n - 2);\n  }\n}",
        "bug_type": "general,functionality"
    },
    {
        "buggy_code": "/* Write a function that logs the string 'Hello' when the user clicks a button */\nfunction buttonAction() {\n  const button = document.getElementById('myButton');\nbutton.addEventListener('clock', () => {\n  console.log('Hello');\n  });\n}",
        "correct_code": "/* Write a function that logs the string 'Hello' when the user clicks a button */\nfunction buttonAction() {\n  const button = document.getElementById('myButton');\nbutton.addEventListener('click', () => {\n  console.log('Hello');\n  });\n}",
        "bug_type": "ui-ux"
    },
    {
        "buggy_code":"/* Given an array of integers return only the even numbers */\nfunction getEvenNumbers(arr) {\n  return arr.filter(num => num % 2 === 1);\n  }",
        "correct_code": "/* Given an array of integers return only the even numbers */\nfunction getEvenNumbers(arr) {  return arr.filter(num => num % 2 === 0);\n  }",
        "bug_type": "functionality"
    },
    {
        "buggy_code": "/* Write a function that takes the role of a user and checks if it is administrator */\nfunction isAdmin(userRole) {\n    return userRole == \"admin\";\n}",
        "correct_code": "/* Write a function that takes the role of a user and checks if it is administrator */\nfunction isAdmin(userRole) {\n    return userRole === \"admin\";\n}",
        "bug_type": "network-security"
    },
    {
        "buggy_code": "/* Write a function that toggles the visibility of a button when the user clicks it */\n function toggleButton(){\n   let button = document.getElementById('button');\nbutton.disabled = !button.enabled",
        "correct_code": "/* Write a function that toggles the visibility of a button when the user clicks it */\n function toggleButton(){\n   let button = document.getElementById('button');\nbutton.disabled = !button.disabled",
        "bug_type": "ui-ux"
    },
    {
        "buggy_code": "/* Write a function that concatenates a list of strings in one string */\n function concatenateStrings(strings){\n   let result = \"\";\nfor (let i=0;i<strings.length;i++){\n result += strings[i];\n}\n    return result;\n}",
        "correct_code": "/* Write a function that concatenates a list of strings in one string */\n function concatenateStrings(strings){\n   let result = [];\nfor (let i=0;i<strings.length;i++){\n result.push(strings[i]);\n}\n    return result.join('');\n}",
        "bug_type":"compatibility-performance"
    },
    {
        "buggy_code": "/* Given a positive integer, obtain its roman numeral equivalent as a string,and return it in lowercase. */\n function intToMiniRoman(number){\n let num = [1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000]\n  let sym = ['i', 'iv', 'v', 'ix', 'x', 'xl', 'l', 'xc', 'c', 'cd', 'd', 'cm', 'm']\n  let i = 12\n  let res = ''\n  while (number) {\n    let div = (number - number % num[i]) / num[i]\n    number = number % num[i]\n    while (div) {\n      res += sym[i]\n      div -= 1\n    }\n    i -= 1\n  }\n  return res\n}\n\n",
        "correct_code": "/* Given a positive integer, obtain its roman numeral equivalent as a string,and return it in lowercase. */\n function intToMiniRoman(number){\n   let num = [1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000]\n  let sym = ['i', 'iv', 'v', 'ix', 'x', 'xl', 'l', 'xc', 'c', 'cd', 'd', 'cm', 'm']\n  let i = 12\n  let res = ''\n  while (number) {\n    let div = (number - number % num[i]) / num[i]\n    number = number % num[i]\n    while (div) {\n      res += sym[i]\n      div -= 1\n    }\n    i -= 1\n  }\n  return res\n}\n\n",
        "bug_type": "compatibility-performance"
    },
    {
        "buggy_code": "/* Write a function that checks if a given number is prime */\n function isPrime(n) {\n    if (n <= 1) return false;\n    for (let i = 2; i <= Math.sqrt(n); i++) {\n        if (n / i === 0) return false;\n    }\n    return true;\n}",
        "correct_code": "/* Write a function that checks if a given number is prime */\n function isPrime(n) {\n    if (n <= 1) return false;\n    for (let i = 2; i <= Math.sqrt(n); i++) {\n        if (n % i === 0) return false;\n    }\n    return true;\n}",
        "bug_type": "functionality"
    },
    {
        "buggy_code": "function handleUserInput() {\n    let userInput = document.getElementById('userInput').value;\n    document.getElementById('output').innerHTML = userInput;\n}",
        "correct_code": "function handleUserInput() {\n    let userInput = document.getElementById('userInput').value;\n    document.getElementById('output').innerText = userInput;\n}",
        "bug_type": "network-security"
    }
]